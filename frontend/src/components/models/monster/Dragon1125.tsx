/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { AnimationClip } from 'three'

type GLTFResult = GLTF & {
  nodes: {
    Eyes003: THREE.Mesh
    Drago_Simple: THREE.SkinnedMesh
    CG: THREE.Bone
  }
  materials: {
    ['Material #240']: THREE.MeshStandardMaterial
    ['Material #284']: THREE.MeshStandardMaterial
  }
}

type ActionName =
  | 'idle'
  | 'eat'
  | 'sleepStart'
  | 'sleeping'
  | 'sleepEnd'
  | 'death'
  | 'death2'
  | 'scared'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/cg/dragon1125.glb') as GLTFResult
  const { actions } = useAnimations<AnimationClip>(animations, group)
  useEffect(() => {
    actions['sleeping']?.play()
  }, [actions])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Armature001" position={[0, 0.24, -0.11]} rotation={[0, -1.57, 0]} scale={0.01}>
        <primitive object={nodes.CG} />
        <skinnedMesh
          geometry={nodes.Drago_Simple.geometry}
          material={materials['Material #284']}
          skeleton={nodes.Drago_Simple.skeleton}
        />
      </group>
    </group>
  )
}

useGLTF.preload('/cg/dragon1125.glb')
